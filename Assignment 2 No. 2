Import Library

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn import cluster
from sklearn.metrics import silhouette_score

Read Datasets
data = pd.read_csv('https://raw.githubusercontent.com/Rietaros/kampus_merdeka/main/cluster_s1.csv')
data = data.drop('no', axis = 1)
data.head()

%matplotlib inline
ax1 = data.plot.scatter(x='x', y='y', c='DarkBlue')

Data Segmentation (Clustering)

# TODO: Lakukan pencarian jumlah cluster terbaik berdasarkan data diatas
from sklearn.cluster import KMeans

# Inisialisasi list untuk menyimpan nilai silhouette average
silhouette_avg = []

# Looping untuk menentukan jumlah cluster terbaik dari 2 hingga 18
for k in range(2, 19):
    model = KMeans(n_clusters=k, random_state=10)
    cluster_labels = model.fit_predict(data)
    silhouette_avg.append(silhouette_score(data, cluster_labels))

# Simpan hasil ke dalam DataFrame
silhouette = pd.DataFrame({"Silhouette Score (%)": [score * 100 for score in silhouette_avg]}, index=[i for i in range(2, 19)])

# Plot Silhouette Score
silhouette.plot(kind="line")
plt.xlabel("Number of Clusters")
plt.ylabel("Silhouette Score (%)")
plt.title("Silhouette Method for KMeans")
plt.show()

# TODO: Lakukan pemodelan dengan KMeans
kmeans = cluster.KMeans(n_clusters=15, random_state=42)
kmeans.fit(data)
label = kmeans.predict(data)

best_k = silhouette["Silhouette Score (%)"].idxmax()
best_score = silhouette["Silhouette Score (%)"].max()
print("Best number of clusters: {}".format(best_k))
print("Best Silhouette Score: {:.2f}%".format(best_score))

Visualization : Cluster Results
# TODO: Masukkan label hasil clustering ke dalam DataFrame

result = data.copy()
result['cluster'] = label
result.head()

# TODO: Plot data hasil clustering dengan Seaborn
sns.relplot(x="x", y="y", hue="cluster", data=result, palette="tab10")

